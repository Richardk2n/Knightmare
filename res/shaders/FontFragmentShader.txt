#version 400 core

in vec2 pass_textureCoords;

out vec4 out_Color;

uniform vec3 color;
uniform sampler2D fontAtlas;

const float width = 0.5;
const float edge = 0.1;

const float borderWidth = 0.7;
const float borderEdge = 0.1;//if e>w -> glow

const vec2 offset = vec2(0.004, 0.004);//creates shadow

const vec3 outlineColor = vec3(0, 0, 1);

float smoothlyStep(float edge0, float edge1, float x){//TODO use if smothstep crashes
    float t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);
    return t * t * (3.0 - 2.0 * t);
}

void main(void){

	float distance = 1.0 - texture(fontAtlas, pass_textureCoords).a;
	float alpha = 1.0 - smoothstep(width, width + edge, distance);
	
	float distance2 = 1.0 - texture(fontAtlas, pass_textureCoords + offset).a;
	float outlineAlpha = 1.0 - smoothstep(borderWidth, borderWidth + borderEdge, distance2);
	
	float overallAlpha = alpha + (1.0 - alpha) * outlineAlpha;
	vec3 overllColor = mix(outlineColor, color, alpha/overallAlpha);

	out_Color = vec4(overllColor, overallAlpha);
	
}